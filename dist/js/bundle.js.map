{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/index.js","webpack:///./js/parts/calculator.js","webpack:///./js/parts/createTab.js","webpack:///./js/parts/formContact.js","webpack:///./js/parts/formMore.js","webpack:///./js/parts/modal.js","webpack:///./js/parts/slider.js","webpack:///./js/parts/timer.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,uDAAuB;AACtD,iBAAiB,mBAAO,CAAC,kDAAmB;AAC5C,sBAAsB,mBAAO,CAAC,sDAAqB;AACnD,mBAAmB,mBAAO,CAAC,gDAAkB;AAC7C,kBAAkB,mBAAO,CAAC,0CAAe;AACzC,mBAAmB,mBAAO,CAAC,4CAAgB;AAC3C,kBAAkB,mBAAO,CAAC,0CAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,E;;;;;;;;;;;ACnBD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,kC;;;;;;;;;;;AC5EA;AACA;AACA;;;AAGA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA,qBAAqB,uBAAuB;AAC5C,+CAA+C;AAC/C,4CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC,mEAAmE;AACnE;AACA,uBAAuB,gBAAgB;AACvC,iCAAiC;AACjC,8BAA8B;AAC9B,8BAA8B;AAC9B,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,6B;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA,MAAM;AACN,KAAK;;;AAGL;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA,OAAO;AACP;AACA;;AAEA,MAAM;;AAEN,oBAAoB,yBAAyB;AAC7C;AACA;AACA,KAAK,E;;;;;;;;;;;AClHL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,GAAG;;AAEH,EAAE;AACF;;AAEA,0B;;;;;;;;;;;AC5EA;;AAEA;AACA;AACA;AACA,4DAA4D;;;AAG5D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uCAAuC;AACvC;AACA,qCAAqC;AACrC,4CAA4C;AAC5C,6CAA6C;AAC7C,KAAK;AACL;;AAEA,kBAAkB,sBAAsB,OAAO;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA,mCAAmC;AACnC,8CAA8C;AAC9C,sCAAsC;AACtC,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,6B;;;;;;;;;;;AC5DA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC,E;AACD;AACA;AACA;AACA;;AAEA,gBAAgB,qBAAqB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA,8B;;;;;;;;;;;AClEA;;AAEA,4BAA4B;;AAE5B;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,8BAA8B;AAC9B,kCAAkC;AAClC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6B","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/index.js\");\n","window.addEventListener('DOMContentLoaded', function (){\r\n  \"use strict\";\r\n\r\nlet createCalculator = require('./parts/calculator.js'),\r\n    createTabs = require('./parts/createTab'),\r\n    sendFormContact = require('./parts/formContact'),\r\n    sendFormMore = require('./parts/formMore'),\r\n    createModal = require('./parts/modal'),\r\n    createSlider = require('./parts/slider'),\r\n    createTimer = require('./parts/timer');\r\n\r\ncreateCalculator();\r\ncreateTabs();\r\nsendFormContact();\r\nsendFormMore();\r\ncreateModal();\r\ncreateSlider();\r\ncreateTimer();\r\n\r\n});","function createCalculator() {\r\n\r\n    let personsInput = document.querySelectorAll('.counter-block-input')[0], //инпут количества людей\r\n        restDaysInput = document.querySelectorAll('.counter-block-input')[1], //инпут количества дней\r\n        place = document.getElementById('select'), // селект по выбору базы \r\n        totalValue = document.getElementById('total'), // общее количество денег\r\n\r\n        //устанавливаем начальное значение: на нули\r\n\r\n        personsSum = 0,\r\n        daysSum = 0,\r\n        total = 0;\r\n\r\n    //пишем в браузером начальное значение 0\r\n\r\n    totalValue.innerHTML = 0;\r\n\r\n    //делаем обработчие события на инпут количества людей\r\n\r\n    personsInput.addEventListener('input', function () {\r\n\r\n        //персонс ссум будет ровна тому что ввели в инпут\r\n\r\n        personsSum = +this.value;\r\n\r\n        //здесь формула мб разной возьмем к примеру такую\r\n        //тотал будет равени количесту людей + количство дней умноженное на 4000\r\n\r\n        total = (daysSum + personsSum) * 4000;\r\n\r\n        //создаем условия если поле дней не введено у нас оставался нолик в тотале\r\n\r\n        if (restDaysInput.value == '' || personsInput.value == '') {\r\n            totalValue.innerHTML = 'Заполните поля';\r\n\r\n            //иначе записываем результат\r\n\r\n        } else {\r\n            totalValue.innerHTML = total;\r\n        }\r\n    });\r\n\r\n    //делаем обработчик на количество дней ( тоже самое что и в верхгнем примере\r\n    // меняем только переменные на обратные)\r\n\r\n    restDaysInput.addEventListener('input', function () {\r\n        daysSum = +this.value;\r\n        total = (daysSum + personsSum) * 4000;\r\n        if (personsInput.value == '' || restDaysInput.value == '') {\r\n            totalValue.innerHTML = 'Заполните поля';\r\n        } else {\r\n            totalValue.innerHTML = total;\r\n        }\r\n    });\r\n    //вешаем обработчик на выбор базы\r\n    //два варианта решения с делегированием и без\r\n\r\n    place.addEventListener('change', (e) => {\r\n        // this.total = 0;\r\n        //пишем условие на проверку заполнено ли у нас поле\r\n        if (restDaysInput.value == '' || personsInput.value == '') {\r\n            totalValue.innerHTML = 'Заполните поля';\r\n        }\r\n        //\r\n        else {\r\n            //1\r\n            // this.options - обращаемся к элементу оптион на которое мы воздействуем сейчас\r\n            // this.selectedIndex - обращаемся к тому елементу который у нас был выбран\r\n            // totalValue.innerHTML = total * this.options[this.selectedIndex].value;\r\n            // 2\r\n            //   e.target.value - смотри что выбрали и умнажаем на value выбранного\r\n            totalValue.innerHTML = total * e.target.value;\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = createCalculator;","function createTabs() {\r\n  //Ждем загрузку все элементов на странице и переводим в строгий режим \r\n  //Ждать загрузку можно множеством способов(например написать defer)\r\n\r\n\r\n    //Получаем элементы\r\n    let tab = document.querySelectorAll('.info-header-tab'), //берем все элемеенты менюТаба\r\n      info = document.querySelector('.info-header'), //получаем родителя меню-табов\r\n      tabContent = document.querySelectorAll('.info-tabcontent'); //получаем табы который будем показывать\r\n    //скрываем все табконтенты при запуске, кроме первого\r\n    function hideTabContent(a) {\r\n      for (let i = a; i < tabContent.length; i++) {\r\n        tabContent[i].classList.remove('show'); //Удаляем класс который показывал элементы\r\n        tabContent[i].classList.add('hide'); //Приваиваем класс который прячет элементы\r\n      }\r\n    }\r\n\r\n    hideTabContent(1);\r\n    // показываем нужный табконтент\r\n    // b = Наш меню-таб\r\n    function showTabContent(b) {\r\n      if (tabContent[b].classList.contains('hide')) { //Проверяем действительно ли наш элемент скрыт\r\n        tabContent[b].classList.remove('hide'); //\r\n        tabContent[b].classList.add('show');\r\n      }\r\n    }\r\n\r\n    //создаем  обработчик события\r\n    info.addEventListener('click', (event) => {\r\n      let target = event.target; //Для удобства создаю переменню для таргета\r\n      if (target && target.classList.contains('info-header-tab')) { //делегируем событие\r\n        // определяем  что наш меню-таб свзян с табконтентом через цикл\r\n        for (let i = 0; i < tab.length; i++) {\r\n          if (target == tab[i]) { // сравниваем кликнуты менютаб и который нужно показать\r\n            hideTabContent(0); //скрываем все табы\r\n            showTabContent(i); //показываем нужный\r\n            break; //остановОчка\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n}\r\n\r\nmodule.exports =  createTabs;","\tfunction formContact() {\r\n\t\tlet messageContact = {\r\n\t\t\tloading: 'Загрузка...',\r\n\t\t\tsucess: 'Заявка принята. Скоро свяжемся',\r\n\t\t\terror: 'Ой. Что-то пошло не так'\r\n\t\t};\r\n\r\n\t\tlet contactForm = document.getElementById('form'),\r\n\t\t\tinputContact = contactForm.getElementsByTagName('input');\r\n\r\n\t\tlet statusMessageContact = document.createElement('div');\r\n\t\tstatusMessageContact.classList.add('status');\r\n\t\t//Создаем функцию дял отправки форму \r\n\t\tfunction sendForm(elem) {\r\n\t\t\telem.addEventListener('submit', (event) => {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\telem.appendChild(statusMessageContact);\r\n\t\t\t\tlet contactFormData = new FormData(elem);\r\n\t\t\t\t//внутри создаем функци.\r\n\t\t\t\tfunction postData(data) {\r\n\t\t\t\t\t//Которая возвращает нам  промис\r\n\t\t\t\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\t\t\t\tlet requestContact = new XMLHttpRequest();\r\n\r\n\t\t\t\t\t\trequestContact.open('POST', 'server.php');\r\n\r\n\t\t\t\t\t\trequestContact.setRequestHeader('Content-type', 'application/json', 'charset-utf-8');\r\n\t\t\t\t\t\t//преобразуем в JSON\r\n\t\t\t\t\t\tlet obj = {};\r\n\t\t\t\t\t\tdata.forEach((value, key) => obj[key] = value);\r\n\r\n\t\t\t\t\t\tlet jsonContact = JSON.stringify(obj);\r\n\r\n\t\t\t\t\t\trequestContact.onreadystatechange = () => {\r\n\r\n\t\t\t\t\t\t\tif (requestContact.readyState < 4) {\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t} else if (requestContact.readyState == 4 &&\r\n\t\t\t\t\t\t\t\trequestContact.status == 200) {\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treject();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\trequestContact.send(jsonContact);\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t} //End postdata\r\n\r\n\r\n\t\t\t\tfunction clearInput() {\r\n\t\t\t\t\tfor (let i = 0; i < inputContact.length; i++) {\r\n\t\t\t\t\t\tinputContact[i].value = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\tpostData(contactFormData)\r\n\t\t\t\t\t.then(() => statusMessageContact.innerHTML = messageContact.loading)\r\n\t\t\t\t\t.then(() => statusMessageContact.innerHTML = messageContact.sucess)\r\n\t\t\t\t\t.catch(() => statusMessageContact.innerHTML = messageContact.error)\r\n\t\t\t\t\t.then(clearInput);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsendForm(contactForm);\r\n\t}\r\n\r\n\tmodule.exports = formContact;\r\n\r\n\r\n\r\n\t//Вариант без промисов\r\n\r\n\t// let response =  fetch('server.php', {\r\n\t// \tmethod: 'POST',\r\n\t// \tbody: new FormData(contactForm),\r\n\t// \theaders: {\r\n\t// \t\t'Content-type': 'application/json;charset-utf-8'\r\n\t// \t}\r\n\r\n\r\n\t// contactForm.addEventListener('submit', (event) => {\r\n\t// \tevent.preventDefault();\r\n\r\n\t// \tcontactForm.appendChild(statusMessageContact);\r\n\r\n\t// \tlet requestContact = new XMLHttpRequest();\r\n\t// \trequestContact.open('POST', 'server.php');\r\n\t// \trequestContact.setRequestHeader('Content-type', 'application/json', 'charset-utf-8');\r\n\t// \tlet contactFormData = new FormData(contactForm);\r\n\t// \tlet obj = {};\r\n\t// \tcontactFormData.forEach((value, key) => obj[key] = value);\r\n\t// \tlet jsonContact = JSON.stringify(obj);\r\n\t// \trequestContact.send(jsonContact);\r\n\r\n\t// \trequestContact.addEventListener('readystatechange', () => {\r\n\t// \t\tif (requestContact.readyState < 4) {\r\n\t// \t\t\tstatusMessageContact.innerHTML = messageContact.loading;\r\n\t// \t\t} else if (requestContact.readyState == 4 && requestContact.status == 200) {\r\n\t// \t\t\tstatusMessageContact.innerHTML = messageContact.sucess;\r\n\r\n\t// \t\t} else {\r\n\t// \t\t\tstatusMessageContact.innerHTML = messageContact.error;\r\n\t// \t\t}\r\n\r\n\t// \t});\r\n\r\n\t// \tfor (let i = 0; i < inputContact.length; i++) {\r\n\t// \t\tinputContact[i].value = '';\r\n\t// \t}\r\n\t// });","function formMore() {\r\n\t//Создаем объект с различными состояниями нашего запроса\r\n\tlet massage = {\r\n\t\tloading: 'Загрузка..',\r\n\t\tsucess: 'Спасибо! Скоро свяжемся',\r\n\t\tfailure: 'Что-то пошло не так'\r\n\t};\r\n\t//Получаем жлементы формы для работы с ними\r\n\tlet form = document.querySelector('.main-form'),\r\n\t\tinput = form.getElementsByTagName('input'),\r\n\t\t//Создаем элемент для вывода сообщения стутауса отправки формы\r\n\t\tstatusMessage = document.createElement('div');\r\n\tstatusMessage.classList.add('status');\r\n\t//Создаем обработчик на форму \r\n\t// (событик submit будет происходить тогда когда наша форма отправляется)\r\n\tform.addEventListener('submit', (event) => {\r\n\r\n\t\t//Отменяем стандартное поведение браузкра\r\n\t\t//для того чтобы страница не перезагружалась\r\n\t\tevent.preventDefault();\r\n\t\t//оповещаем пользователя о статусе\r\n\t\tform.appendChild(statusMessage);\r\n\t\t//создаем объект(конструктор) для запросов\r\n\t\tlet request = new XMLHttpRequest();\r\n\t\t//cсоздаем мктод для настройки нашего AJAX запроса \r\n\t\t// может прнимать пять аргументов \r\n\t\t// (1 = метод. обычно GET - получаем, POST отправляем,\r\n\t\t//   2 = куда обращаемся\r\n\t\t//   3 = отвечает за ассинхронность. по умолчанию стоит тру\r\n\t\t//   4 логин\r\n\t\t//   5 пароль)\r\n\t\trequest.open('POST', 'server.php'); //отправляем тело\r\n\t\t//Натсраиваем заголовки HTTP запроса\r\n\t\t//указываем какиой контент у нас будет (будет в JSONформате)\r\n\t\trequest.setRequestHeader('Content-type', 'application/json', 'charset=utf-8');\r\n\t\t//получаем данные которые ввел пользователь\r\n\t\t//  для того чтобы правильно отправлять данные на сервер\r\n\t\t//  необходимо чтобы в инпутах стояли параметры нэйм он будет ключом в запросе\r\n\t\t//создаем и помещаем в конструктор все что заполнил пользователь\r\n\t\tlet formData = new FormData(form);\r\n\t\t//проебразовываем в JSONфайл\r\n\t\t//Создаем промежуточный объект\r\n\t\tlet obj = {};\r\n\t\t// записываем наши ключи и значение полученные от пользователя в объект\r\n\t\tformData.forEach((value, key) => {\r\n\t\t\tobj[key] = value;\r\n\t\t});\r\n\t\t//метод стрингифлай превращает обычные объекты в JSON формат\r\n\t\t//\r\n\t\tlet json = JSON.stringify(obj);\r\n\r\n\t\t//открываем(отправляем на сервер) наш запрос(те данные что ввел пользователь)\r\n\t\trequest.send(json); //*чтобы провермить что отправили можно посмотреть в консоле нетворк\r\n\t\t//прописывает обработчик с событием readystatechange чтобы клиент видел что происходит\r\n\t\t//событие изменение стутуса нашего запроса\r\n\t\trequest.addEventListener('readystatechange', () => {\r\n\t\t\t// прописываем условия для отслеживания нашего запроса\r\n\t\t\t//readeState < 4 значит что запрос еще не отправился\r\n\t\t\tif (request.readyState < 4) {\r\n\t\t\t\tstatusMessage.innerHTML = massage.loading;\r\n\t\t\t}\r\n\t\t\t//request 4 значит отправилось(можно было бы вставить прогрессбар)\r\n\t\t\telse if (request.readyState === 4 && request.status == 200) {\r\n\t\t\t\tstatusMessage.innerHTML = massage.sucess;\r\n\t\t\t}\r\n\t\t\t//если запрос был неудачен\r\n\t\t\telse {\r\n\t\t\t\tstatusMessage.innerHTML = massage.failure;\r\n\t\t\t}\r\n\r\n\t\t\tinput[0].value = ''; //сбрасываем инпут. если их несколько сделать через цикл\r\n\t\t});\r\n\r\n\t});\r\n}\r\n\r\nmodule.exports = formMore;","function createModal() {\r\n\r\n\tlet more = document.querySelector('.more'), //кнопка для вызова модального окна\r\n\t\toverlay = document.querySelector('.overlay'), //модальное окно\r\n\t\tshut = document.querySelector('.popup-close'), //крестик\r\n\t\tarrTabBtn = document.querySelectorAll('.description-btn'); //массив кнопок\r\n\r\n\r\n\t// arrTabBtn.document.push(more);\r\n\t//конструктор конопки\r\n\r\n\tclass Btn {\r\n\t\tconstructor(name) {\r\n\t\t\tthis.name = name;\r\n\t\t}\r\n\r\n\t\t//Вызов модального окна\r\n\r\n\t\topen() {\r\n\t\t\tif (this.name.length == undefined) { //проверяем одна кнопка или нет\r\n\t\t\t\tthis.name.addEventListener('click', () => {\r\n\t\t\t\t\toverlay.style.display = 'block'; //Принимаем блочную модель \r\n\t\t\t\t\tthis.name.classList.add('more-splash'); //Добавляем анимацию\r\n\t\t\t\t\tdocument.body.style.overflow = 'hidden'; //Запрещаем скролить пока не закроем окно\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < this.name.length; i++) { //Запускаем цикл для массива кнопок\r\n\t\t\t\tthis.name[i].addEventListener('click', () => {\r\n\t\t\t\t\toverlay.style.display = 'block';\r\n\t\t\t\t\tthis.name[i].classList.add('more-splash');\r\n\t\t\t\t\tdocument.body.style.overflow = 'hidden';\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// //закрытие модального окна\r\n\r\n\t\tclose() {\r\n\t\t\tthis.name.addEventListener('click', () => {\r\n\t\t\t\toverlay.style.display = 'none'; ////Убиарем классы \r\n\t\t\t\tthis.name.classList.remove('more-splash'); //Убираем анимацию\r\n\t\t\t\tdocument.body.style.overflow = ''; //Запрещаем скролить пока не закроем окно\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// создаем кнопки \r\n\r\n\tlet openModalBtnTimer = new Btn(more),\r\n\t\tcloserOpenModal = new Btn(shut),\r\n\t\topenModalBtnContentArr = new Btn(arrTabBtn);\r\n\r\n\t//вызываем нужные методы для кнопок\r\n\r\n\topenModalBtnTimer.open();\r\n\topenModalBtnContentArr.open();\r\n\tcloserOpenModal.close();\r\n}\r\n\r\nmodule.exports = createModal;","function createSlider () {\r\n\r\nlet slideIndex = 1, //Указываем параметр текущего слайда \r\n\tslides = document.querySelectorAll('.slider-item'),\r\n\tprev = document.querySelector('.prev'),\r\n\tnext = document.querySelector('.next'),\r\n\tdotsWrap = document.querySelector('.slider-dots'),\r\n\tdots = document.querySelectorAll('.dot');\r\n\r\n// функция проверяет, скрывает, и поазывает активность\r\nshowSlides(slideIndex);\r\nfunction showSlides(n) {\r\n\t// проверки для начала и конца слайда\r\n\t//если переключили на последнем слайде идем в начало\r\n\tif (n > slides.length) {\r\n\t\tslideIndex = 1;\r\n\t}\r\n\t//если переключили назад на первом слайде идем в конец\r\n\tif (n < 1) {\r\n\t\tslideIndex = slides.length;\r\n\t}\r\n\t//Скрываем слайды\r\n\tslides.forEach((item) => item.style.display = 'none');\r\n\t//делаем точки неактивными\r\n\tdots.forEach((item) => item.classList.remove('dot-active'));\r\n\t//показываем первый слайд и точку\r\n\tslides[slideIndex - 1].style.display = 'block';\r\n\tdots[slideIndex - 1].classList.add('dot-active');\r\n\r\n}\r\n// функция для показа  слайда\r\nfunction plusSlides(n) {\r\n\t// получаем новое значение и вызываем. \r\n\tshowSlides(slideIndex += n);\r\n}\r\n//показываем слайд по точке\r\nfunction currentSlide(n) {\r\n\tshowSlides(slideIndex = n);\r\n}\r\n//клик назад\r\nprev.addEventListener('click', () => {\r\n\t//показ пред. слайда\r\n\tplusSlides(-1);\r\n});\r\n//клик вперед\r\nnext.addEventListener('click', () => {\r\n\tplusSlides(1);\r\n});  \r\n// показ слайда по выбранной точке\r\ndotsWrap.addEventListener('click', (event) => {\r\n\t//цикл чтобы узнакть по какой точке кликнули\r\n\t// dots.length + 1 :\r\n\r\n\tfor (let i = 0; i < dots.length + 1; i++) {\r\n\t\t// с помощью первой проверки проверям тыкнули ли в контейнс именно по кнопке\r\n\t\t// с помощью второй точки узнаем номер точки\r\n\t\t//dots - 1 \r\n\r\n\t\tif (event.target.classList.contains('dot') && event.target == dots[i - 1]) {\r\n\t\t\t//запускаем слайд для показа\r\n\t\t\tcurrentSlide(i);\r\n\t\t}\r\n\t}\r\n});\r\n}\r\n\r\nmodule.exports = createSlider;","function createTimer () {\r\n\r\nlet deadline = '2020-04-22'; //Указываем конечное время нашего таймера\r\n\r\n//Узнать промежуток времени между настоящим временем и дедлайном и парсим дату\r\nfunction getTimeRemaining(endTime) { //В параметры передаем дедлайн\r\n\t//Узнаем разницу и парсим в дату\r\n\t//(вторая дата это настоящий момент времени)\r\n\tlet t = Date.parse(endTime) - Date.parse(new Date()), //получаем кол-во милисекунд;\r\n\t\t//Чтобы получить секунды\r\n\t\t//Нужно получить остаток \r\n\t\t//(вычленяем количество минут и берем остаток, тоесть наши секунды)\r\n\t\tseconds = Math.floor((t / 1000) % 60),\r\n\t\tminutes = Math.floor((t / 1000 / 60) % 60), //Тоже самое но получаем минуты\r\n\t\thours = Math.floor((t / (1000 * 60 * 60) % 24)), //получаем часы\r\n\t\t// hours = Math.floor((t/1000/60/60) ), получаем часы\r\n\t\tdays = Math.floor((t / (1000 * 60 * 60 * 24))); //дни\r\n\t//Возвращаем объект из таймера, и парисрованной даты настоящего времени\r\n\treturn {\r\n\t\t'total': t,\r\n\t\t'hours': hours,\r\n\t\t'minutes': minutes,\r\n\t\t'seconds': seconds,\r\n\t\t'days': days,\r\n\t};\r\n\r\n}\r\n//Взтавляем значение в нашу верстку и запускаем таймер\r\n//Функция принимает два параметра \r\n//id таймера в верстке и наш дедлайн\r\n\r\nfunction setClock(id, endTime) {\r\n\tlet timer = document.getElementById(id), //получаем наш таймер\r\n\t\thours = timer.querySelector('.hours'), //часы из верстки\r\n\t\tminutes = timer.querySelector('.minutes'), //минуты\r\n\t\tseconds = timer.querySelector('.seconds'), //секунды\r\n\t\tdays = timer.querySelector('.days');\r\n\t//делаем таймер динамичным с помощью сетинтервала\r\n\tlet timeInterval = setInterval(updateClock, 1000);\r\n\t//Записываем значения\r\n\t//Парсим дату и записываем значение\r\n\r\n\tfunction updateClock() {\r\n\t\t//каждый раз как вызывается эта функция мы \r\n\t\t//будем получать изменения каждую секунду\r\n\t\t//и получать обновленное время\r\n\t\tlet t = getTimeRemaining(endTime); //получаем объет с разницей по времени\r\n\t\thours.textContent = t.hours; //получаем часы\r\n\t\tminutes.textContent = t.minutes; //минуты\r\n\t\tseconds.textContent = t.seconds; //секунды\r\n\t\tdays.textContent = t.days;\r\n\t\t//Добавляем ноль, когда секунд,минут,часов меньше дясяти\r\n\t\tif (t.seconds < 10) {\r\n\t\t\tseconds.textContent = '0' + t.seconds;\r\n\t\t}\r\n\t\tif (t.minutes < 10) {\r\n\t\t\tminutes.textContent = '0' + t.minutes;\r\n\t\t}\r\n\t\tif (t.hours < 10) {\r\n\t\t\thours.textContent = '0' + t.hours;\r\n\t\t}\r\n\t\tif (t.total <= 0) { //останавливаем интервал по завершению\r\n\t\t\tclearInterval(timeInterval);\r\n\t\t\thours.textContent = '00';\r\n\t\t\tminutes.textContent = '00';\r\n\t\t\tseconds.textContent = '00';\r\n\t\t\tdays.textContent = '0';\r\n\t\t}\r\n\t}\r\n}\r\n\r\nsetClock('timer', deadline);\r\n}\r\n\r\nmodule.exports = createTimer;"],"sourceRoot":""}